"use strict";(self.webpackChunkGene=self.webpackChunkGene||[]).push([[1838,4872],{75940:(v,M,p)=>{p.d(M,{z:()=>g});var b=p(94650),y=p(11481);let g=(()=>{class h{constructor(w){this.sanitizer=w}transform(w){return this.sanitizer.bypassSecurityTrustHtml(w)}}return h.\u0275fac=function(w){return new(w||h)(b.\u0275\u0275directiveInject(y.H7,16))},h.\u0275pipe=b.\u0275\u0275definePipe({name:"safeHtml",type:h,pure:!0}),h})()},65592:(v,M,p)=>{p.d(M,{r:()=>w});var b=p(49671),y=p(94650),g=(()=>{return(e=g||(g={}))[e.Up=1]="Up",e[e.Down=3]="Down",e[e.Right=6]="Right",e[e.Left=8]="Left",e[e.UpMirrored=2]="UpMirrored",e[e.DownMirrored=4]="DownMirrored",e[e.LeftMirrored=5]="LeftMirrored",e[e.RightMirrored=7]="RightMirrored",e[e.Default=0]="Default",e[e.NotJpeg=-1]="NotJpeg",e[e.NotDefined=-2]="NotDefined",g;var e})();class o{}o.getOrientation=e=>new Promise((s,r)=>{try{const i=new FileReader;i.onload=()=>{const a=new DataView(i.result);if(!a.byteLength||65496!==a.getUint16(0,!1))return s(g.NotDefined);const c=a.byteLength;let t=2;for(;t<c;){const u=a.getUint16(t,!1);if(t+=2,65505===u){if(1165519206!==a.getUint32(t+=2,!1))return s(g.NotJpeg);const d=18761===a.getUint16(t+=6,!1);t+=a.getUint32(t+4,d);const f=a.getUint16(t,d);t+=2;for(let n=0;n<f;n++)if(274===a.getUint16(t+12*n,d))return s(a.getUint16(t+12*n+8,d))}else{if(65280!=(65280&u))break;t+=a.getUint16(t,!1)}}return s(g.NotJpeg)},i.readAsArrayBuffer(e)}catch{return r(g.Default)}}),o.uploadFile=(e,s=!0,r=!1)=>new Promise(function(i,a){const c=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),t=/iPad|iPhone|iPod/i.test(navigator.userAgent);Promise.resolve(c||t).then(u=>u?o.generateUploadInputNative(window.document,s,r):o.generateUploadInputRenderer(e,s,r)).then(u=>{const d=u?Array.from(u):[],f=d.map(m=>o.getOrientation(m)),n=d.map(m=>o.fileToDataURL(m));let l=[];Promise.all(f).then(m=>(l=m,Promise.all(n))).then(m=>{const _=m.map((P,U)=>({image:P.dataUrl,orientation:l[U],fileName:P.fileName}));i(s?_:_[0])})}).catch(u=>a(u))}),o.fileToDataURL=e=>new Promise((s,r)=>{const i=new FileReader;i.onload=a=>{s({dataUrl:a.target.result,fileName:e.name})};try{i.readAsDataURL(e)}catch(a){r(`ngx-image-compress - probably no file have been selected: ${a}`)}}),o.generateUploadInputRenderer=(e,s=!0,r=!1)=>{let i=!1;return new Promise((a,c)=>{const t=e.createElement("input");e.setStyle(t,"display","none"),e.setProperty(t,"type","file"),e.setProperty(t,"accept","image/*"),s&&e.setProperty(t,"multiple","true"),e.listen(t,"click",u=>{u.target.value=""}),e.listen(t,"change",u=>{i=!0,a(u.target.files)}),r&&window.addEventListener("focus",()=>{setTimeout(()=>{i||c(new Error("file upload on blur - no file selected"))},300)},{once:!0}),t.click()})},o.generateUploadInputNative=(e,s=!0,r=!1)=>{let i=!1;return new Promise((a,c)=>{const t=e.createElement("input");t.id="upload-input"+new Date,t.style.display="none",t.setAttribute("type","file"),t.setAttribute("accept","image/*"),s&&t.setAttribute("multiple","true"),e.body.appendChild(t),t.addEventListener("change",()=>{i=!0,a(t.files),e.body.removeChild(e.getElementById(t.id))},{once:!0}),r&&window.addEventListener("focus",()=>{setTimeout(()=>{!i&&e.getElementById(t.id)&&(c(new Error("file upload on blur - no file selected")),e.body.removeChild(e.getElementById(t.id)))},300)},{once:!0}),t.click()})},o.compress=(e,s,r,i=50,a=50,c=0,t=0)=>new Promise(function(u,d){a/=100,i/=100;const f=new Image;f.onload=()=>{const n=r.createElement("canvas"),l=n.getContext("2d");if(!l)return d("No canvas context available");let m=f.naturalWidth,_=f.naturalHeight;if(!CSS.supports("image-orientation","from-image")&&(s===g.Right||s===g.Left)){const L=m;m=_,_=L}i=Math.min(i,c?c/m:1,t?t/_:1),n.width=m*i,n.height=_*i;const x=Math.PI/180;CSS.supports("image-orientation","from-image")||s===g.Up?l.drawImage(f,0,0,n.width,n.height):s===g.Right?(l.save(),l.rotate(90*x),l.translate(0,-n.width),l.drawImage(f,0,0,n.height,n.width),l.restore()):s===g.Left?(l.save(),l.rotate(-90*x),l.translate(-n.width,0),l.drawImage(f,0,0,n.height,n.width),l.restore()):s===g.Down?(l.save(),l.rotate(180*x),l.translate(-n.width,-n.height),l.drawImage(f,0,0,n.width,n.height),l.restore()):l.drawImage(f,0,0,n.width,n.height);const S=e.substr(5,e.split(";")[0].length-5),F=n.toDataURL(S,a);u(F)},f.onerror=n=>d(n),f.src=e}),o.byteCount=e=>encodeURI(e).split(/%..|./).length-1,o.getImageMaxSize=function(){var e=(0,b.Z)(function*(s,r,i,a=!1){const t=f=>(f/1024/1024).toFixed(2);r&&console.debug("NgxImageCompress - Opening upload window");let d,u=yield o.uploadFile(i,!1,a);for(let f=0;f<10;f++){const n=o.byteCount(u.image);d=yield o.compress(u.image,u.orientation,i,50,100);const l=o.byteCount(d);if(console.debug("NgxImageCompress -","Compression from",t(n),"MB to",t(l),"MB"),l>=n)throw 0===f?(r&&console.debug("NgxImageCompress -","File can't be reduced at all - returning the original",t(n),"MB large"),u.image):(r&&console.debug("NgxImageCompress -","File can't be reduced more - returning the best we can, which is ",t(n),"MB large"),u.image);if(l<1024*s*1024)return r&&console.debug("NgxImageCompress -","Here your file",t(l),"MB large"),d;if(9===f)throw r&&console.debug("NgxImageCompress -","File can't reach the desired size after",10,"tries. Returning file ",t(n),"MB large"),u.image;r&&console.debug("NgxImageCompress -","Reached",t(l),"MB large. Trying another time after",f+1,"times"),u.image=d}throw r&&console.debug("NgxImageCompress - Unexpected error"),""});return function(s,r,i){return e.apply(this,arguments)}}();let w=(()=>{class e{constructor(r){this.DOC_ORIENTATION=g,this.render=r.createRenderer(null,null)}byteCount(r){return o.byteCount(r)}getOrientation(r){return o.getOrientation(r)}uploadFile(){return o.uploadFile(this.render,!1)}uploadMultipleFiles(){return o.uploadFile(this.render,!0)}uploadFileOrReject(){return o.uploadFile(this.render,!1,!0)}uploadMultipleFilesOrReject(){return o.uploadFile(this.render,!0,!0)}compressFile(r,i,a=50,c=50,t=0,u=0){return o.compress(r,i,this.render,a,c,t,u)}uploadAndGetImageWithMaxSize(r=1,i=!1,a=!1){return o.getImageMaxSize(r,i,this.render,a)}}return e.\u0275fac=function(r){return new(r||e)(y.\u0275\u0275inject(y.RendererFactory2))},e.\u0275prov=y.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac,providedIn:"root"}),e})()}}]);